AWSTemplateFormatVersion: '2010-09-09'
Description: "Version - v2.8.0: Lambda Function to add fields to host metrics sources based on the available instances in all regions of the current AWS account."

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - Section1aSumoDeployment
          - Section1bSumoAccessID
          - Section1cSumoAccessKey
          - Section1dRemoveSumoResourcesOnDeleteStack

      - Label:
          default: "AWS Account Alias"
        Parameters:
          - Section2aAccountAlias
          - Section2bUpdateVersion
          - Section2cAccountAliasMappingS3URL

    ParameterLabels:
      Section1aSumoDeployment:
        default: "Sumo Logic Deployment Name"
      Section1bSumoAccessID:
        default: "Sumo Logic Access ID"
      Section1cSumoAccessKey:
        default: "Sumo Logic Access Key"
      Section1dRemoveSumoResourcesOnDeleteStack:
        default: "Delete Fields when stack is deleted"

      Section2aAccountAlias:
        default: "Alias for AWS Account Identification. Please leave this blank if you are using CloudFormation StackSets to deploy the solution in multiple AWS accounts."
      Section2bUpdateVersion:
        default: "Force Update the Stack"
      Section2cAccountAliasMappingS3URL:
        default: "S3 URL of a CSV file that maps AWS Account IDs to an Account Alias"

Parameters:
  Section1aSumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1. Visit https://help.sumologic.com/APIs/General-API-Information/Sumo-Logic-Endpoints-and-Firewall-Security"
  Section1bSumoAccessID:
    Type: String
    Description: "Sumo Logic Access ID. Visit https://help.sumologic.com/Manage/Security/Access-Keys#Create_an_access_key"
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  Section1cSumoAccessKey:
    Type: String
    Description: "Sumo Logic Access Key."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  Section1dRemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "True - Deletes the Account and Namespace fields from the Host Metric Sources when the stack is deleted.
                  False - Keeps the fields in Host Metric Sources when the stack is deleted."
    Type: String

  Section2aAccountAlias:
    Type: String
    Description: "Provide an Alias for AWS account for identification in Sumo Logic Explorer View, metrics and logs. Please do not include special characters."
    AllowedPattern: "[a-z0-9]*"
    ConstraintDescription: "Alias must only contain lowercase letters, number and length less than or equal to 30 characters."
    MaxLength: 30

  Section2bUpdateVersion:
    Type: String
    Description: "Increment the value in case you want to force update the stack."
    Default: "1"

  Section2cAccountAliasMappingS3URL:
    Type: String
    Description: "Required only if you are using CloudFormation StackSets to deploy the solution in multiple AWS accounts."
    Default: ""

Mappings:
  # Bucket names where the Lambda Zip and Nested Templates are kept. Buckets are present in region, with region as suffix.
  # Some buckets names have 's' in the region suffix. It is kept intentional as bucket names were not available.
  # Buckets names which are intentional -
  # 1. appdevzipfiles-eu-north-1s
  # 2. appdevzipfiles-ap-east-1s
  # 3. appdevzipfiles-af-south-1s
  # 4. appdevzipfiles-me-south-1s
  RegionMap:
    us-east-1:
      bucketname: appdevzipfiles-us-east-1
    us-east-2:
      bucketname: appdevzipfiles-us-east-2
    us-west-1:
      bucketname: appdevzipfiles-us-west-1
    us-west-2:
      bucketname: appdevzipfiles-us-west-2
    ap-south-1:
      bucketname: appdevzipfiles-ap-south-1
    ap-northeast-2:
      bucketname: appdevzipfiles-ap-northeast-2
    ap-southeast-1:
      bucketname: appdevzipfiles-ap-southeast-1
    ap-southeast-2:
      bucketname: appdevzipfiles-ap-southeast-2
    ap-northeast-1:
      bucketname: appdevzipfiles-ap-northeast-1
    ca-central-1:
      bucketname: appdevzipfiles-ca-central-1
    eu-central-1:
      bucketname: appdevzipfiles-eu-central-1
    eu-west-1:
      bucketname: appdevzipfiles-eu-west-1
    eu-west-2:
      bucketname: appdevzipfiles-eu-west-2
    eu-west-3:
      bucketname: appdevzipfiles-eu-west-3
    eu-north-1:
      bucketname: appdevzipfiles-eu-north-1s
    sa-east-1:
      bucketname: appdevzipfiles-sa-east-1
    ap-east-1:
      bucketname: appdevzipfiles-ap-east-1s
    af-south-1:
      bucketname: appdevzipfiles-af-south-1s
    eu-south-1:
      bucketname: appdevzipfiles-eu-south-1
    me-south-1:
      bucketname: appdevzipfiles-me-south-1s
    me-central-1:
      bucketname: appdevzipfiles-me-central-1
    eu-central-2:
        bucketname: appdevzipfiles-eu-central-2ss
    ap-northeast-3:
        bucketname: appdevzipfiles-ap-northeast-3s
    ap-southeast-3:
        bucketname: appdevzipfiles-ap-southeast-3

Resources:

  LambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Operations are performed across resources."
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaExecutePolicies
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ec2:DescribeInstances
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: 'LambdaHelper'

  LambdaHelper:
    Type: AWS::Lambda::Function
    Properties:
      Handler: main.handler
      Runtime: python3.11
      Code:
        S3Bucket: !FindInMap [RegionMap, !Ref 'AWS::Region', bucketname]
        S3Key: "sumologic-aws-observability/apps/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelperv2.0.18.zip"
      MemorySize: 128
      Timeout: 900
      Role: !GetAtt LambdaRole.Arn

  AccountAliasValue:
    Type: Custom::AccountAlias
    Properties:
      ServiceToken: !GetAtt LambdaHelper.Arn
      Region: !Ref "AWS::Region"
      AccountID: !Ref "AWS::AccountId"
      AccountAlias: !Ref Section2aAccountAlias
      AccountAliasMappingS3Url: !Ref Section2cAccountAliasMappingS3URL
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment

  AddFields:
    Type: Custom::AddFieldsInHostMetricsSources
    Properties:
      ServiceToken: !GetAtt LambdaHelper.Arn
      RemoveOnDeleteStack: !Ref Section1dRemoveSumoResourcesOnDeleteStack
      SumoAccessID: !Ref Section1bSumoAccessID
      SumoAccessKey: !Ref Section1cSumoAccessKey
      SumoDeployment: !Ref Section1aSumoDeployment
      UpdateVersion: !Ref Section2bUpdateVersion
      AccountID: !Ref "AWS::AccountId"
      Region: !Ref "AWS::Region"
      AddFields: "Yes"
      Fields:
        account: !GetAtt AccountAliasValue.ACCOUNT_ALIAS
        Namespace: "AWS/EC2"
        accountid: !Ref "AWS::AccountId"